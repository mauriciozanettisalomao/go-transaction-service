{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for a transaction service.",
        "title": "Go Transaction Service API",
        "contact": {
            "name": "Mauricio Zanetti Salomao",
            "url": "https://github.com/mauriciozanettisalomao/go-transaction-service",
            "email": "mauriciozanetti86@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/mauriciozanettisalomao/go-transaction-service/blob/main/LICENSE"
        },
        "version": "1.0"
    },
    "paths": {
        "/v1/transactions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create transactions made by a certain user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The maximum number of records to return per page.",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/restapi.response"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/restapi.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/restapi.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create transactions made by a certain user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transactions"
                ],
                "summary": "Create a new transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "it helps you retry requests safely without accidentally doing the same thing twice. When making or changing an object, use an idempotency key.",
                        "name": "X-Idempotency-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create Transaction request",
                        "name": "Transaction",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Transaction"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction created",
                        "schema": {
                            "$ref": "#/definitions/domain.Transaction"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/restapi.errorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/restapi.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found error",
                        "schema": {
                            "$ref": "#/definitions/restapi.errorResponse"
                        }
                    },
                    "409": {
                        "description": "Data conflict error",
                        "schema": {
                            "$ref": "#/definitions/restapi.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/restapi.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Transaction": {
            "type": "object",
            "required": [
                "amount",
                "currency",
                "operationType",
                "origin",
                "user"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "operationType": {
                    "type": "string",
                    "enum": [
                        "debit",
                        "credit"
                    ]
                },
                "origin": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "properties": {
                        "id": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "restapi.Metadata": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "restapi.errorResponse": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Error message 1",
                        " Error message 2"
                    ]
                }
            }
        },
        "restapi.response": {
            "type": "object",
            "properties": {
                "data": {},
                "metadata": {
                    "$ref": "#/definitions/restapi.Metadata"
                }
            }
        }
    }
}